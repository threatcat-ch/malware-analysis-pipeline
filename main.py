#!/usr/bin/python3
import time
import argparse
import json
import logging
import random

from plugins.abstract_plugin import AbstractPlugin
from utils.state import State
from utils.task import Task

class Pipeline():
    def __init__(self, ):
        logging.info("Init Main")
        self.plugins = {}
        self.redis = None
        # set random task number
        self.task_id = random.randint(100000, 999999)
        logging.info(f"Task ID: {self.task_id}")
        self._load_environment()

    def _load_environment(self) -> None:
        self._load_plugins()
 
    def _load_plugins(self) -> None:
        self.plugins = AbstractPlugin.load_plugins()

    def run_plugins(self) -> None:
        self.task_id += 1
        State.attachment_name = 'Unknown'
        State.path = None
        task = Task(self.task_id, len(self.plugins))
        for _, plugin in self.plugins.items():
            try:
                task.adavance_progress()
                plugin.run({})
            except Exception as e:
                print(e)
                task.adavance_progress()
                task.set_error()
                break
        task.adavance_progress()
        State._reset_state()
        time.sleep(10)
        
if __name__ == '__main__':
    app = Pipeline()
    while True:
        app.run_plugins()
